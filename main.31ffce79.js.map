{"version":3,"sources":["scripts/main.js"],"names":["grid","tbody","document","querySelector","scoreInfo","messageLose","messageWon","messageStart","button","score","isGameWon","i","j","isGameOver","blankGrid","createBoard","generateNumber","options","push","length","cell","Math","floor","random","updateBoard","compare","a","b","copyGrid","extra","flipGrid","reverse","rotateGrid","newGrid","keyPressed","addEventListener","e","flipped","rotated","played","code","classList","remove","add","innerHTML","past","operate","changed","row","slide","combine","arr","filter","num","missing","Array","fill","concat","children","className","startGame","contains"],"mappings":"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","file":"main.31ffce79.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst tbody = document.querySelector('tbody');\r\nconst scoreInfo = document.querySelector('.game-score');\r\nconst messageLose = document.querySelector('.message-lose');\r\nconst messageWon = document.querySelector('.message-win');\r\nconst messageStart = document.querySelector('.message-start');\r\nconst button = document.querySelector('button');\r\n\r\nlet grid;\r\nlet score = 0;\r\n\r\nfunction isGameWon() {\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      if (grid[i][j] === 2048) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction isGameOver() {\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      if (grid[i][j] === 0) {\r\n        return false;\r\n      }\r\n\r\n      if (i !== 3 && grid[i][j] === grid[i + 1][j]) {\r\n        return false;\r\n      }\r\n\r\n      if (j !== 3 && grid[i][j] === grid[i][j + 1]) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction blankGrid() {\r\n  return [[0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n  ];\r\n}\r\n\r\nfunction createBoard() {\r\n  grid = blankGrid();\r\n  generateNumber();\r\n  generateNumber();\r\n}\r\n\r\nfunction generateNumber() {\r\n  const options = [];\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      if (grid[i][j] === 0) {\r\n        options.push([i, j]);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (options.length > 0) {\r\n    const cell = options[Math.floor(Math.random() * options.length + 0)];\r\n    const random = Math.random();\r\n\r\n    grid[cell[0]][cell[1]] = random > 0.9 ? 4 : 2;\r\n    updateBoard();\r\n  };\r\n}\r\n\r\nfunction compare(a, b) {\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      if (a[i][j] !== b[i][j]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction copyGrid(grid) {\r\n  const extra = blankGrid();\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      extra[i][j] = grid[i][j];\r\n    }\r\n  }\r\n\r\n  return extra;\r\n}\r\n\r\nfunction flipGrid(grid) {\r\n  for (let i = 0; i < 4; i++) {\r\n    grid[i].reverse();\r\n  }\r\n\r\n  return grid;\r\n}\r\n\r\nfunction rotateGrid(grid) {\r\n  const newGrid = blankGrid();\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      newGrid[i][j] = grid[j][i];\r\n    }\r\n  }\r\n\r\n  return newGrid;\r\n}\r\n\r\nfunction keyPressed() {\r\n  addEventListener('keydown', e => {\r\n    let flipped = false;\r\n    let rotated = false;\r\n    let played = true;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowRight':\r\n        break;\r\n      case 'ArrowLeft':\r\n        grid = flipGrid(grid);\r\n        flipped = true;\r\n        break;\r\n      case 'ArrowDown':\r\n        grid = rotateGrid(grid);\r\n        rotated = true;\r\n        break;\r\n      case 'ArrowUp':\r\n        grid = rotateGrid(grid);\r\n        grid = flipGrid(grid);\r\n        rotated = true;\r\n        flipped = true;\r\n        break;\r\n      default:\r\n        played = false;\r\n    }\r\n\r\n    if (played) {\r\n      button.classList.remove('start');\r\n      button.classList.add('restart');\r\n      button.innerHTML = 'Restart';\r\n\r\n      const past = copyGrid(grid);\r\n\r\n      for (let i = 0; i < 4; i++) {\r\n        grid[i] = operate(grid[i]);\r\n      }\r\n\r\n      const changed = compare(past, grid);\r\n\r\n      if (flipped) {\r\n        grid = flipGrid(grid);\r\n      }\r\n\r\n      if (rotated) {\r\n        grid = rotateGrid(grid);\r\n        grid = rotateGrid(grid);\r\n        grid = rotateGrid(grid);\r\n      }\r\n\r\n      if (changed) {\r\n        generateNumber();\r\n        updateBoard();\r\n      }\r\n\r\n      const gameOver = isGameOver();\r\n\r\n      if (gameOver) {\r\n        messageLose.classList.remove('hidden');\r\n      }\r\n\r\n      const gameWon = isGameWon();\r\n\r\n      if (gameWon) {\r\n        messageWon.classList.remove('hidden');\r\n      }\r\n    }\r\n  });\r\n}\r\n// keyPressed();\r\n\r\nfunction operate(row) {\r\n  row = slide(row);\r\n  row = combine(row);\r\n  row = slide(row);\r\n\r\n  return row;\r\n}\r\n\r\nfunction slide(row) {\r\n  let arr = row.filter(num => num);\r\n  const missing = 4 - arr.length;\r\n  const zeros = Array(missing).fill(0);\r\n\r\n  arr = zeros.concat(arr);\r\n\r\n  return arr;\r\n}\r\n\r\nfunction combine(row) {\r\n  for (let i = 3; i >= 1; i--) {\r\n    const a = row[i];\r\n    const b = row[i - 1];\r\n\r\n    if (a === b) {\r\n      row[i] = a + b;\r\n      score += row[i];\r\n      scoreInfo.innerHTML = score;\r\n\r\n      row[i - 1] = 0;\r\n    }\r\n  }\r\n\r\n  return row;\r\n}\r\n\r\nfunction updateBoard() {\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      if (grid[i][j] !== 0) {\r\n        tbody.children[i].children[j].classList\r\n          .remove(`field-cell--${tbody.children[i].children[j].innerHTML}`);\r\n\r\n        tbody.children[i].children[j].classList\r\n          .add(`field-cell--${grid[i][j]}`);\r\n        tbody.children[i].children[j].innerHTML = grid[i][j];\r\n      }\r\n\r\n      if (grid[i][j] === 0) {\r\n        tbody.children[i].children[j].className = 'field-cell';\r\n        tbody.children[i].children[j].innerHTML = '';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction startGame() {\r\n  keyPressed();\r\n\r\n  button.addEventListener('click', e => {\r\n    if (button.classList.contains(('start'))\r\n      && !button.classList.contains(('clicked'))) {\r\n      createBoard();\r\n      messageStart.classList.add('hidden');\r\n      button.classList.add('clicked');\r\n    }\r\n\r\n    if (button.classList.contains('restart')) {\r\n      messageStart.classList.remove('hidden');\r\n\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          tbody.children[i].children[j].innerHTML = '';\r\n          tbody.children[i].children[j].className = 'field-cell';\r\n          button.classList.remove('clicked');\r\n          scoreInfo.innerHTML = 0;\r\n          score = 0;\r\n        }\r\n      }\r\n      button.classList.remove('restart');\r\n      button.classList.add('start');\r\n      button.innerHTML = 'Start';\r\n    }\r\n  });\r\n}\r\n\r\nstartGame();\r\n"]}